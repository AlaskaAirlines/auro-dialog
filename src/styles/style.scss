// Copyright (c) 2024 Alaska Airlines. All right reserved. Licensed under the Apache-2.0 license
// See LICENSE in the project root for license information.

// ---------------------------------------------------------------------

/* stylelint-disable at-rule-empty-line-before, custom-property-pattern, declaration-empty-line-before, order/properties-order, color-function-notation, max-nesting-depth,
   selector-class-pattern, scss/selector-no-redundant-nesting-selector, declaration-block-no-duplicate-properties, scss/double-slash-comment-empty-line-before,
   scss/selector-nest-combinators, rule-empty-line-before,  no-descending-specificity, no-duplicate-selectors */

// Import Auro tokens
@use "@aurodesignsystem/design-tokens/dist/legacy/auro-classic/SCSSVariables" as vac;
@use "@aurodesignsystem/design-tokens/dist/legacy/auro-classic/SCSSVariableMap";

@use '@aurodesignsystem/webcorestylesheets/dist/bundled/type/classes.alaska.min.css';

@use "@aurodesignsystem/webcorestylesheets/src/breakpoints" as breakpoints;
@use "@aurodesignsystem/webcorestylesheets/src/animation" as animation;

$auro-spacing-types: stack;
$auro-spacing-options: none;


// container styles - defines the look of the outer custom component
:host {
  --insetPaddingXl: 0 var(--ds-size-400, #{vac.$ds-size-400}) var(--ds-size-400, #{vac.$ds-size-400}) var(--ds-size-400, #{vac.$ds-size-400});
  --insetPaddingXxl: 0 var(--ds-size-600, #{vac.$ds-size-600}) var(--ds-size-600, #{vac.$ds-size-600}) var(--ds-size-600, #{vac.$ds-size-600});
  --insetPaddingXxxl: 0 var(--ds-size-800, #{vac.$ds-size-800}) var(--ds-size-800, #{vac.$ds-size-800}) var(--ds-size-800, #{vac.$ds-size-800});
}

[auro-icon] {
  --ds-auro-icon-size: var(--ds-size-300, #{vac.$ds-size-300});
}

// container shape styles
.dialogOverlay {
  position: fixed;
  z-index: -1;
  bottom: 0;
  left: 0;

  width: 100%;
  height: 100%;

  pointer-events: none;

  // Open modifier for default dialog state
  &--open {
    z-index: var(--ds-depth-overlay);

    pointer-events: unset;

    transition: background 0.3s cubic-bezier(0.4, 0, 0.2, 0);
  }

  // Modal modifier for modal/blocking state
  &--modal {
    z-index: var(--ds-depth-overlay);

    transition: background 0.3s cubic-bezier(0.4, 0, 0.5, 0);
  }
}

// Default selector setting mobile-first specs
.dialog {
  position: fixed;
  z-index: -1;
  right: 0;
  bottom: -100%;
  left: 0;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  visibility: hidden;
  overflow: visible;

  width: calc(100% - var(--insetPaddingXl) - var(--insetPaddingXl));
  max-height: 90%;
  padding: var(--insetPaddingXl);

  opacity: 0;
  border: 0;

  // baseline dialog UI / mobile-first
  @include animation.auro_transition(all, 0.3s, ease-in-out);

  // open modifier
  &--open {
    z-index: var(--ds-depth-modal, vac.$ds-depth-modal);
    visibility: visible;
    bottom: 0;
    opacity: 1;
  }

  // 1024px breakpoint / large dialog size is default
  @include breakpoints.auro_grid-breakpoint--md {
    top: 10%;
    bottom: unset;
    left: 0;
    right: 0;
    
    max-width: 80%;
    max-height: 80%;
    margin: auto;
    padding: var(--insetPaddingXxxl);
    
    opacity: 0;
    width: 0;
    height: 0;
    overflow: hidden;

    &--open {
      opacity: 1;
      width: calc(100% - var(--insetPaddingXxxl) - var(--insetPaddingXxxl));
      height: auto;
      overflow: visible;
    }
  }

  @include breakpoints.auro_grid-breakpoint--lg {
    max-width: 986px;
  }

  // footer slot
  &-footer {
    padding-top: var(--ds-size-400, vac.$ds-size-400);

    @include breakpoints.auro_grid-breakpoint--md {
      ::slotted(*) {
        display: flex;
        justify-content: flex-end;
      }
    }
  }
}

.dialog-header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  padding-top: var(--ds-size-800, vac.$ds-size-800);

  &--action {
    margin: 0;
    padding: 0;

    &:hover {
      cursor: pointer;
    }
  }
}

.dialog-content {
  flex: 1;
  overflow: auto;
  overscroll-behavior: contain;
}

::slotted([slot="content"]) {
  position: relative;
}

// sets dynamic placement of close-X based on padding specs
:host([unformatted]) {
  .dialog-header--action {
    position: absolute;
    top: var(--ds-size-400, vac.$ds-size-400);
    bottom: unset;
    right: var(--ds-size-400, vac.$ds-size-400);

    @include breakpoints.auro_grid-breakpoint--md {
      top: var(--ds-size-800, vac.$ds-size-800);
      bottom: unset;
      right: var(--ds-size-800, vac.$ds-size-800);
    }
  }
}

:host([sm]) {
  .dialog {
    max-height: 30%;
  }

  @include breakpoints.auro_grid-breakpoint--md {
    .dialog {
      top: 10%;
      bottom: unset;
      max-width: 40%;
      max-height: 80%;
      padding: var(--insetPaddingXxl);
    }
  }
  @include breakpoints.auro_grid-breakpoint--lg {
    .dialog {
      max-width: 740px;
    }
  }
}

:host([md]) {
  .dialog {
    max-height: 50%;
  }

  @include breakpoints.auro_grid-breakpoint--md {
    .dialog {
      top: 10%;
      bottom: unset;

      max-width: 70%;
      max-height: 80%;
    }
  }
  @include breakpoints.auro_grid-breakpoint--lg {
    .dialog {
      top: 10%;
      bottom: unset;

      max-width: 986px;
    }
  }
}

:host([sm][lg]),
:host([md][lg]) {
  @include breakpoints.auro_grid-breakpoint--md {
    .dialog {
      max-height: 80%;
    }
  }
  .dialog {
    max-height: 90%;
  }
}

:host([unformatted]) {
  .dialog {
    padding: 0;
  }
}
